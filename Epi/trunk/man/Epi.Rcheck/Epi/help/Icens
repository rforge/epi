Icens                  package:Epi                  R Documentation

_F_i_t_s _a _r_e_g_r_e_s_s_i_o_n _m_o_d_e_l _t_o _i_n_t_e_r_v_a_l _c_e_n_s_o_r_e_d _d_a_t_a.

_D_e_s_c_r_i_p_t_i_o_n:

     The models fitted assumes a piecewise constant baseline rate in
     intervals specified by the argument 'breaks', and for the
     covariates either a multiplicative relative risk function
     (default) or an additive excess risk function.

_U_s_a_g_e:

       Icens( first.well, last.well, first.ill,
              formula, model.type=c("MRR","AER"), breaks,
              boot=FALSE, alpha=0.05, keep.sample=FALSE,
              data )
       

_A_r_g_u_m_e_n_t_s:

first.well: Time of entry to the study, i.e. the time first seen
          without event. Numerical vector.

last.well: Time last seen without event. Numerical vector.

first.ill: Time first seen with event. Numerical vector.

 formula: Model formula for the log relative risk.

model.type: Which model should be fitted.

  breaks: Breakpoints between intervals in which the underlying
          timescale is assumed constant. Any observation outside the
          range of 'breaks' is discarded.

    boot: Should bootstrap be performed to produce confidence intervals
          for parameters. If a number is given this will be the number
          of bootsrap samples. The default is 1000.

   alpha: 1 minus the confidence level.

keep.sample: Should the bootstrap sample of the parameter values be
          returned?

    data: Data frame in which the times and formula are interpreted.

_D_e_t_a_i_l_s:

     The model is fitted by calling either 'fit.mult' or 'fit.add'.

_V_a_l_u_e:

     An object of class '"Icens"': a list with three components: 

   rates: A glm object from a binomial model with log-link, estimating
          the baseline rates, and the excess risk if '"AER"' is
          specfied.

     cov: A glm object from a binomial model with complementary log-log
          link, estimating the log-rate-ratios. Only if '"MRR"' is
          specfied.

   niter: Nuber of iterations, a scalar

 boot.ci: If 'boot=TRUE', a 3-column matrix with estimates and
          1-'alpha' confidence intervals for the parameters in the
          model.

  sample: A matrix of the parameterestimates from the bootstrapping.
          Rows refer to parameters, columns to bootstrap samples.

_A_u_t_h_o_r(_s):

     Martyn Plummer, plummer@iarc.fr, Bendix Carstensen, bxc@steno.dk

_R_e_f_e_r_e_n_c_e_s:

     B Carstensen: Regression models for interval censored survival
     data: application to HIV infection in Danish homosexual men.
     Statistics in Medicine, 15(20):2177-2189, 1996.

     CP Farrington: Interval censored survival data: a generalized
     linear modelling approach. Statistics in Medicine, 15(3):283-292,
     1996.

_S_e_e _A_l_s_o:

     'fit.add' 'fit.mult'

_E_x_a_m_p_l_e_s:

     data( hivDK )
     # Convert the dates to fractional years so that rates are
     # expressed in cases per year
     for( i in 2:4 ) hivDK[,i] <- cal.yr( hivDK[,i] )

     m.RR <- Icens( entry, well, ill,
                    model="MRR", formula=~pyr+us, breaks=seq(1980,1990,5),
                    data=hivDK)
     # Currently the MRR model returns a list with 2 glm objects.
     round( ci.lin( m.RR$rates ), 4 )
     round( ci.lin( m.RR$cov, Exp=TRUE ), 4 )
     # There is actually a print method:
     print( m.RR )

     m.ER <- Icens( entry, well, ill,
                    model="AER", formula=~pyr+us, breaks=seq(1980,1990,5),
                    data=hivDK)
     # There is actually a print method:
     print( m.ER )
       

